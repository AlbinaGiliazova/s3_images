version: '3.8'

services:
  django:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=avatars.settings
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=miniopassword
      - AWS_STORAGE_BUCKET_NAME=avatars
      - AWS_S3_ENDPOINT_URL=http://minio:9000
      - AWS_S3_REGION_NAME=us-east-1
      - AWS_S3_USE_SSL=false
      - AWS_S3_CUSTOM_DOMAIN=localhost:9000
    env_file:  
      - .env  
    depends_on:
      - minio

  minio:
    image: minio/minio:latest
    container_name: minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"   # веб-интерфейс
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: miniopassword
      MINIO_BUCKET_NAME: avatars
    volumes:
      - minio_data:/data
      - ./minio-init:/docker-entrypoint-init.d
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  createbucket:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      sh -c "
        sleep 5;
        /usr/bin/mc alias set myminio http://minio:9000 minioadmin miniopassword && \
        /usr/bin/mc mb --ignore-existing myminio/avatars
      "

volumes:
  minio_data: